{"version":3,"sources":["webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/components/VTooltip/VTooltip.ts","webpack:///../../../src/mixins/bootable/index.ts","webpack:///../../../src/mixins/dependent/index.ts"],"names":["baseMixins","mixins","name","props","activator","default","validator","val","includes","disabled","internalActivator","openOnHover","openOnFocus","Boolean","data","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","this","beforeDestroy","methods","addActivatorEvents","keys","Object","key","genActivator","node","on","attrs","genActivatorAttributes","role","String","genActivatorListeners","e","getActivator","target","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","type","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","$refs","content","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","document","stackElement","stackExclude","stackMinZIndex","isActive","computed","activeZIndex","window","index","getMaxZIndex","parseInt","exclude","base","zis","activeElements","Math","allowOverflow","light","dark","maxWidth","Number","minWidth","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","openOnClick","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","top","left","bottom","right","width","height","offsetTop","scrollHeight","offsetLeft","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","isNaN","computedTop","hasActivator","$slots","$scopedSlots","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","onClick","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","requestAnimationFrame","cb","startTransition","Promise","resolve","updateDimensions","closeDelay","fixed","openDelay","tag","transition","calculatedMinWidth","closeDependents","calculatedLeft","unknown","calculatedTop","activatorTop","classes","computedTransition","offsetY","offsetX","styles","opacity","genTransition","$createElement","genContent","setBackgroundColor","staticClass","class","directives","value","ref","render","h","showLazyContent","eager","isBooted","created","searchChildren","results","children","child","isDependent","openDependents","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","overlay"],"mappings":"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","file":"js/chunk-e34dd9ae.0e5428b5.js","sourcesContent":["// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","import './VTooltip.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Helpers\nimport { convertToUnit, keyCodes, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable, Delayable, Dependent, Detachable, Menuable, Toggleable).extend({\n  name: 'v-tooltip',\n\n  props: {\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    disabled: Boolean,\n    fixed: {\n      type: Boolean,\n      default: true,\n    },\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true,\n    },\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    transition: String,\n  },\n\n  data: () => ({\n    calculatedMinWidth: 0,\n    closeDependents: false,\n  }),\n\n  computed: {\n    calculatedLeft (): string {\n      const { activator, content } = this.dimensions\n      const unknown = !this.bottom && !this.left && !this.top && !this.right\n      const activatorLeft = this.attach !== false ? activator.offsetLeft : activator.left\n      let left = 0\n\n      if (this.top || this.bottom || unknown) {\n        left = (\n          activatorLeft +\n          (activator.width / 2) -\n          (content.width / 2)\n        )\n      } else if (this.left || this.right) {\n        left = (\n          activatorLeft +\n          (this.right ? activator.width : -content.width) +\n          (this.right ? 10 : -10)\n        )\n      }\n\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return `${this.calcXOverflow(left, this.dimensions.content.width)}px`\n    },\n    calculatedTop (): string {\n      const { activator, content } = this.dimensions\n      const activatorTop = this.attach !== false ? activator.offsetTop : activator.top\n      let top = 0\n\n      if (this.top || this.bottom) {\n        top = (\n          activatorTop +\n          (this.bottom ? activator.height : -content.height) +\n          (this.bottom ? 10 : -10)\n        )\n      } else if (this.left || this.right) {\n        top = (\n          activatorTop +\n          (activator.height / 2) -\n          (content.height / 2)\n        )\n      }\n\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return `${this.calcYOverflow(top + this.pageYOffset)}px`\n    },\n    classes (): object {\n      return {\n        'v-tooltip--top': this.top,\n        'v-tooltip--right': this.right,\n        'v-tooltip--bottom': this.bottom,\n        'v-tooltip--left': this.left,\n        'v-tooltip--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      }\n    },\n    computedTransition (): string {\n      if (this.transition) return this.transition\n\n      return this.isActive ? 'scale-transition' : 'fade-transition'\n    },\n    offsetY (): boolean {\n      return this.top || this.bottom\n    },\n    offsetX (): boolean {\n      return this.left || this.right\n    },\n    styles (): object {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: convertToUnit(this.maxWidth),\n        minWidth: convertToUnit(this.minWidth),\n        opacity: this.isActive ? 0.9 : 0,\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.value && this.callActivate()\n    })\n  },\n\n  mounted () {\n    if (getSlotType(this, 'activator', true) === 'v-slot') {\n      consoleError(`v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'`, this)\n    }\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(this.startTransition)\n    },\n    deactivate () {\n      this.runDelay('close')\n    },\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      listeners.focus = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('open')\n      }\n      listeners.blur = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('close')\n      }\n      listeners.keydown = (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.esc) {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      return listeners\n    },\n    genTransition () {\n      const content = this.genContent()\n\n      if (!this.computedTransition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.computedTransition,\n        },\n      }, [content])\n    },\n    genContent () {\n      return this.$createElement(\n        'div',\n        this.setBackgroundColor(this.color, {\n          staticClass: 'v-tooltip__content',\n          class: {\n            [this.contentClass]: true,\n            menuable__content__active: this.isActive,\n            'v-tooltip__content--fixed': this.activatorFixed,\n          },\n          style: this.styles,\n          attrs: this.getScopeIdAttrs(),\n          directives: [{\n            name: 'show',\n            value: this.isContentActive,\n          }],\n          ref: 'content',\n        }),\n        this.getContentSlot()\n      )\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, {\n      staticClass: 'v-tooltip',\n      class: this.classes,\n    }, [\n      this.showLazyContent(() => [this.genTransition()]),\n      this.genActivator(),\n    ])\n  },\n})\n","// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n"],"sourceRoot":""}